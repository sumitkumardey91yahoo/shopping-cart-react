{"version":3,"sources":["components/items/SingleItem.js","components/items/MainItemsParent.js","components/cartSystem/Cart.js","components/checkout/CheckoutSystem.js","components/footer/FooterMain.js","components/init/Init.js","App.js","serviceWorker.js","index.js"],"names":["SingleItem","this","props","receiveDataCB","number","className","src","image_url","offer","brand","name","mrp","price","type","onClick","addToCart","React","Component","MainComponentItems","data","state","message","fetchService","fetch","then","res","json","success","result","products","setState","map","single","index","key","Cart","total","qty","cartData","obj","finalData","item","length","Checkout","FooterMain","cartSummary","Init","items","cartItem","console","log","push","carSystem","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d598a86.chunk.js","sourcesContent":["import React from 'react';\nimport './style/style.css'\n\nexport default class SingleItem extends React.Component {\n    componentWillMount() {\n       // console.log(\"componentWillMount 1\")\n      }\n      componentDidMount() {\n        //console.log(\"componentDidMount 1\")\n      }\n      addToCart() {\n          this.props.receiveDataCB(this.props.number);\n      }\n    render() {\n        return (\n            <div className=\"cart-body row \"> \n                <div className=\"col-4\">\n                    <img src={this.props.number.image_url}></img>\n                    <div>{this.props.number.offer}</div>\n                    </div> \n                <div className=\"col-8\">\n                   <div className=\"item-brand\">{this.props.number.brand}</div>\n                    <div className=\"item-title\">{this.props.number.name}</div>\n                    {/* <div className=\"item-quntity\">{this.props.number.name}</div> */}\n                    <div className=\"item-price-mrp\">MRP {this.props.number.mrp}</div>\n\n                    <div className=\"item-price\">Rs {this.props.number.price}</div>\n\n                    <button type=\"button\" onClick={() => this.addToCart()}>Add cart</button>\n                 </div> \n            </div>\n        )\n        \n    }\n}","import React from 'react';\n\nimport SingleItem from './SingleItem'\n\nexport default class MainComponentItems extends React.Component {\n    constructor() {\n        super();\n        this.data = ''\n        this.state = {\n          message: []\n        };\n      }\n      componentWillMount() {\n       // console.log(\"componentWillMount\")\n        this.fetchService();\n      }\n      componentDidMount() {\n        //console.log(\"componentDidMount\")\n      }\n      fetchService() {\n        fetch('/database.json').then((res) => {\n          return res.json();\n        }).then((success) => {\n          this.data = success.result.products;\n          this.setState({ message: this.data });\n         // console.log(this.state.message)\n        })\n      }\n      \n    \n        render() {\n          return (  \n             <div>\n               {\n                \n                 this.state.message.map((single, index) => {\n                  return <SingleItem {...this.props} number={single} key={index}/>\n                 })\n               }\n                 \n              </div>\n            )\n        }\n}","import React , { Component } from 'react'\n\nexport default class Cart extends Component {\n    constructor() {\n        super()\n        this.total = 0\n        this.state = {\n            qty: 0,\n            total: 0\n        }\n    }\n    componentWillReceiveProps(cartData) {\n        let obj = {}\n        obj.total = 0\n        obj.qty = 0;\n        this.total= 0;\n        //this.setState(obj)\n       // console.log(cartData)\n        (cartData.finalData).map(item => {\n            this.total += item.price;\n            return item;\n        });\n      \n        obj.total = this.total\n        obj.qty = (cartData.finalData).length;\n        this.setState(obj)\n    }\n\n    render () {\n     return (\n         <div className=\"cart-main\">\n             <div>Qty {this.state.qty} </div>\n             <div>Total {this.state.total} </div>\n         </div>\n     )\n    }\n}","import React , { Component } from 'react'\n\n\nexport default class Checkout extends Component {\n\n    render () {\n     return (\n         <div className=\"checkout-main\">\n           <button type=\"button\" className=\"checkout\">checkout</button>  \n         </div>\n     )\n    }\n}","import React , { Component } from 'react'\nimport Cart from '../cartSystem/Cart'\nimport Checkout from '../checkout/CheckoutSystem'\n\nimport './style/style.css';\n\nexport default class FooterMain extends Component {\n\n    render () {\n     return (\n         <div className=\"footer-main\">\n             <Cart finalData={this.props.cartSummary}/>\n             <Checkout/>\n\n         </div>\n     )\n    }\n}","import React from 'react'\nimport MainItem from '../items/MainItemsParent'\nimport Footer from '../footer/FooterMain'\n\n\nexport default class Init extends React.Component {\n\n  constructor() {\n    super();\n    this.items = [];\n    this.state = {\n      cartItem: []\n    } \n  }\n\n  carSystem(item) {\n    console.log(\"reached\", item)\n    this.items.push(item)\n    this.setState({cartItem: this.items})\n  }\n\n render() {\n   return (\n     <div>\n       <MainItem receiveDataCB={(data) => this.carSystem(data)} />\n       <Footer cartSummary={this.state.cartItem}/>\n     </div>\n   )\n }\n}","import React from 'react';\nimport './App.css';\nimport Init from './components/init/Init'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Init/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}